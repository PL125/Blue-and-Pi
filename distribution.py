"""
This script prints the payloads distribution on a candump log file.
Usage: python3 distribution.py <path to candump log>
"""

import argparse
import re


parser = argparse.ArgumentParser()
parser.add_argument("candump_trace", help="path to the log file generated by candump")
args = parser.parse_args()
p = re.compile('\(([ 0-9]+)\.([0-9]+)\) (.+) ([A-Z0-9]+)#([A-Z0-9]*).*')
messages = {}


with open(args.candump_trace) as trace:
    for line in trace:
        matches = p.match(line)
        if matches is None:
            continue

        arb_id_hex = matches[4]
        payload_hex = matches[5]
        topic_hex = arb_id_hex[0:4]
        device_hex = arb_id_hex[4:9]

        if device_hex not in messages:
            messages[device_hex] = {}

        if topic_hex not in messages[device_hex]:
            messages[device_hex][topic_hex] = {}

        if payload_hex not in messages[device_hex][topic_hex]:
            messages[device_hex][topic_hex][payload_hex] = 0

        messages[device_hex][topic_hex][payload_hex] += 1

for dev_id, topics in sorted(messages.items()):
    for topic, values in sorted(messages[dev_id].items()):
        print("{}{}".format(topic, dev_id))
        for value, count in sorted(messages[dev_id][topic].items()):
            print("    {} -> {}".format(value, count))
        print("")
